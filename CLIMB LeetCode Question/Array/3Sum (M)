3Sum 
// Two pointer

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
       Arrays.sort(nums); 
       List<List<Integer>> res=new LinkedList<>();
        for(int i=0;i<nums.length-2;i++)
        {
            if(i==0 || (i>0 && nums[i]!=nums[i-1]))
            {
                int lp=i+1; // low pointer
                int hp=nums.length-1; // high pointer
                int sum=0-nums[i]; // b+c=-a; condition
                while(lp<hp)
                {
                    if(nums[lp]+nums[hp]==sum)
                    {
                        res.add(Arrays.asList(nums[i],nums[lp],nums[hp]));
                            
                        while(lp<hp && nums[lp]==nums[lp+1]) lp++; // we donot take dulicates
                        while(lp<hp && nums[hp]==nums[hp-1]) hp--; // increase lp till it finds unique 
                                                                              //element
                        lp++;
                        hp--;
                    }
                    else if(nums[lp]+nums[hp]<sum) lp++;
                    else hp--;
                }
            }
        }
        return res;
    }
}
